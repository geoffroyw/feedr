.feed.js-display-action{:class => ('unread' unless current_user.items.include? item)}
  .categories
    -feed.user_feeds.of_user(current_user).first.categories.each do |c|
      %span.category{:style => "background-color: #{c.color};" }
  .row
    .col-md-3
      .name
        - if feed.custom_name(current_user).size > 30
          =feed.custom_name(current_user)[0..30]
          = "..."
        -else
          =feed.custom_name(current_user)
    .col-md-7
      = link_to item.title, view_feed_item_path(feed, item), {:class => 'title', :target => '_blank'}
    .col-md-1.published-date
      - unless item.published_at.nil?
        =l item.published_at, format: :short
    .col-md-1.actions.hide
      %ul.list-unstyled.list-inline
        %li
          %a.js-show-content.js-update-read-count{:href => '#', 'data-action' => 'show', 'data-feed' => feed.id, 'data-item' => item.id, 'data-item-fetched' => false, :title => 'Voir le contenu'}
            %span.glyphicon.glyphicon-plus
        %li
          =link_to view_feed_item_path(feed, item), {:title => 'Voir l\'article original', :target => '_blank', :class => 'js-update-read-count js-remove-unread-state'} do
            %span.glyphicon.glyphicon-share
        -unless current_user.items.include? item
          %li
            %a.js-mark-read.js-update-read-count{:href => '#' ,'data-feed' => feed.id, 'data-item' => item.id, :title => 'Marquer comme lu'}
              %span.glyphicon.glyphicon-ok
  .row.content.hide
